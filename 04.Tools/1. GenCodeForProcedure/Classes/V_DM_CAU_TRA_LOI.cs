///////////////////////////////////////////////////////////////////////////
// Description: Data Access class for the view 'V_DM_CAU_TRA_LOI'
// Generated by LLBLGen v1.21.2003.712 Final on: Friday, March 14, 2014, 4:18:05 PM
// Because the Base Class already implements IDispose, this class doesn't.
///////////////////////////////////////////////////////////////////////////
using System;
using System.Data;
using System.Data.SqlTypes;
using System.Data.SqlClient;

namespace TOS_TicketSystemLLBL
{
	/// <summary>
	/// Purpose: Data Access class for the view 'V_DM_CAU_TRA_LOI'.
	/// </summary>
	public class V_DM_CAU_TRA_LOI : DBInteractionBase
	{
		#region Class Member Declarations
			private SqlDateTime		_nGAY_TAO;
			private SqlDecimal		_iD_TRANG_THAI, _nGUOI_TAO, _iD, _iD_CAU_HOI;
			private SqlString		_tRANG_THAI, _tEN_NGUOI_TAO, _nOI_DUNG_CAU_HOI, _cAU_TRA_LOI, _lINK_TL_THAM_KHAO;
		#endregion


		/// <summary>
		/// Purpose: Class constructor.
		/// </summary>
		public V_DM_CAU_TRA_LOI()
		{
			// Nothing for now.
		}


		/// <summary>
		/// Purpose: Insert method. This method will insert one new row into the database.
		/// </summary>
		/// <returns>True if succeeded, otherwise an Exception is thrown. </returns>
		/// <remarks>
		/// Properties needed for this method: 
		/// <UL>
		///		 <LI>ID</LI>
		///		 <LI>ID_CAU_HOI</LI>
		///		 <LI>NOI_DUNG_CAU_HOI</LI>
		///		 <LI>CAU_TRA_LOI</LI>
		///		 <LI>LINK_TL_THAM_KHAO. May be SqlString.Null</LI>
		///		 <LI>NGUOI_TAO</LI>
		///		 <LI>TEN_NGUOI_TAO. May be SqlString.Null</LI>
		///		 <LI>NGAY_TAO. May be SqlDateTime.Null</LI>
		///		 <LI>ID_TRANG_THAI</LI>
		///		 <LI>TRANG_THAI</LI>
		/// </UL>
		/// </remarks>
		public override bool Insert()
		{
			SqlCommand	cmdToExecute = new SqlCommand();
			cmdToExecute.CommandText = "dbo.[pr_V_DM_CAU_TRA_LOI_Insert]";
			cmdToExecute.CommandType = CommandType.StoredProcedure;

			// Use base class' connection object
			cmdToExecute.Connection = _mainConnection;

			try
			{
				cmdToExecute.Parameters.Add(new SqlParameter("@ID", SqlDbType.Decimal, 9, ParameterDirection.Input, false, 18, 1, "", DataRowVersion.Proposed, _iD));
				cmdToExecute.Parameters.Add(new SqlParameter("@ID_CAU_HOI", SqlDbType.Decimal, 9, ParameterDirection.Input, false, 18, 1, "", DataRowVersion.Proposed, _iD_CAU_HOI));
				cmdToExecute.Parameters.Add(new SqlParameter("@NOI_DUNG_CAU_HOI", SqlDbType.NVarChar, 2000, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _nOI_DUNG_CAU_HOI));
				cmdToExecute.Parameters.Add(new SqlParameter("@CAU_TRA_LOI", SqlDbType.NText, _cAU_TRA_LOI.Value.Length, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _cAU_TRA_LOI));
				cmdToExecute.Parameters.Add(new SqlParameter("@LINK_TL_THAM_KHAO", SqlDbType.NVarChar, 1050, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _lINK_TL_THAM_KHAO));
				cmdToExecute.Parameters.Add(new SqlParameter("@NGUOI_TAO", SqlDbType.Decimal, 9, ParameterDirection.Input, false, 18, 1, "", DataRowVersion.Proposed, _nGUOI_TAO));
				cmdToExecute.Parameters.Add(new SqlParameter("@TEN_NGUOI_TAO", SqlDbType.NVarChar, 250, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _tEN_NGUOI_TAO));
				cmdToExecute.Parameters.Add(new SqlParameter("@NGAY_TAO", SqlDbType.DateTime, 8, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _nGAY_TAO));
				cmdToExecute.Parameters.Add(new SqlParameter("@ID_TRANG_THAI", SqlDbType.Decimal, 9, ParameterDirection.Input, false, 18, 1, "", DataRowVersion.Proposed, _iD_TRANG_THAI));
				cmdToExecute.Parameters.Add(new SqlParameter("@TRANG_THAI", SqlDbType.NVarChar, 250, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _tRANG_THAI));

				// Open connection.
				_mainConnection.Open();

				// Execute query.
				_rowsAffected = cmdToExecute.ExecuteNonQuery();
				return true;
			}
			catch(Exception ex)
			{
				// some error occured. Bubble it to caller and encapsulate Exception object
				throw new Exception("V_DM_CAU_TRA_LOI::Insert::Error occured.", ex);
			}
			finally
			{
				// Close connection.
				_mainConnection.Close();
				cmdToExecute.Dispose();
			}
		}


		#region Class Property Declarations
		public SqlDecimal ID
		{
			get
			{
				return _iD;
			}
			set
			{
				SqlDecimal iDTmp = (SqlDecimal)value;
				if(iDTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("ID", "ID can't be NULL");
				}
				_iD = value;
			}
		}


		public SqlDecimal ID_CAU_HOI
		{
			get
			{
				return _iD_CAU_HOI;
			}
			set
			{
				SqlDecimal iD_CAU_HOITmp = (SqlDecimal)value;
				if(iD_CAU_HOITmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("ID_CAU_HOI", "ID_CAU_HOI can't be NULL");
				}
				_iD_CAU_HOI = value;
			}
		}


		public SqlString NOI_DUNG_CAU_HOI
		{
			get
			{
				return _nOI_DUNG_CAU_HOI;
			}
			set
			{
				SqlString nOI_DUNG_CAU_HOITmp = (SqlString)value;
				if(nOI_DUNG_CAU_HOITmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("NOI_DUNG_CAU_HOI", "NOI_DUNG_CAU_HOI can't be NULL");
				}
				_nOI_DUNG_CAU_HOI = value;
			}
		}


		public SqlString CAU_TRA_LOI
		{
			get
			{
				return _cAU_TRA_LOI;
			}
			set
			{
				SqlString cAU_TRA_LOITmp = (SqlString)value;
				if(cAU_TRA_LOITmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("CAU_TRA_LOI", "CAU_TRA_LOI can't be NULL");
				}
				_cAU_TRA_LOI = value;
			}
		}


		public SqlString LINK_TL_THAM_KHAO
		{
			get
			{
				return _lINK_TL_THAM_KHAO;
			}
			set
			{
				SqlString lINK_TL_THAM_KHAOTmp = (SqlString)value;
				if(lINK_TL_THAM_KHAOTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("LINK_TL_THAM_KHAO", "LINK_TL_THAM_KHAO can't be NULL");
				}
				_lINK_TL_THAM_KHAO = value;
			}
		}


		public SqlDecimal NGUOI_TAO
		{
			get
			{
				return _nGUOI_TAO;
			}
			set
			{
				SqlDecimal nGUOI_TAOTmp = (SqlDecimal)value;
				if(nGUOI_TAOTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("NGUOI_TAO", "NGUOI_TAO can't be NULL");
				}
				_nGUOI_TAO = value;
			}
		}


		public SqlString TEN_NGUOI_TAO
		{
			get
			{
				return _tEN_NGUOI_TAO;
			}
			set
			{
				SqlString tEN_NGUOI_TAOTmp = (SqlString)value;
				if(tEN_NGUOI_TAOTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("TEN_NGUOI_TAO", "TEN_NGUOI_TAO can't be NULL");
				}
				_tEN_NGUOI_TAO = value;
			}
		}


		public SqlDateTime NGAY_TAO
		{
			get
			{
				return _nGAY_TAO;
			}
			set
			{
				SqlDateTime nGAY_TAOTmp = (SqlDateTime)value;
				if(nGAY_TAOTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("NGAY_TAO", "NGAY_TAO can't be NULL");
				}
				_nGAY_TAO = value;
			}
		}


		public SqlDecimal ID_TRANG_THAI
		{
			get
			{
				return _iD_TRANG_THAI;
			}
			set
			{
				SqlDecimal iD_TRANG_THAITmp = (SqlDecimal)value;
				if(iD_TRANG_THAITmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("ID_TRANG_THAI", "ID_TRANG_THAI can't be NULL");
				}
				_iD_TRANG_THAI = value;
			}
		}


		public SqlString TRANG_THAI
		{
			get
			{
				return _tRANG_THAI;
			}
			set
			{
				SqlString tRANG_THAITmp = (SqlString)value;
				if(tRANG_THAITmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("TRANG_THAI", "TRANG_THAI can't be NULL");
				}
				_tRANG_THAI = value;
			}
		}
		#endregion
	}
}
