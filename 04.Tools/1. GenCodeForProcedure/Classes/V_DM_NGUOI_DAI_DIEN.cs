///////////////////////////////////////////////////////////////////////////
// Description: Data Access class for the view 'V_DM_NGUOI_DAI_DIEN'
// Generated by LLBLGen v1.21.2003.712 Final on: Friday, March 14, 2014, 5:14:12 PM
// Because the Base Class already implements IDispose, this class doesn't.
///////////////////////////////////////////////////////////////////////////
using System;
using System.Data;
using System.Data.SqlTypes;
using System.Data.SqlClient;

namespace TOS_TicketSystemLLBL
{
	/// <summary>
	/// Purpose: Data Access class for the view 'V_DM_NGUOI_DAI_DIEN'.
	/// </summary>
	public class V_DM_NGUOI_DAI_DIEN : DBInteractionBase
	{
		#region Class Member Declarations
			private SqlDecimal		_iD_DON_VI, _iD;
			private SqlString		_nDD_EMAIL, _nDD_CHUC_VU, _nDD_DIEN_THOAI, _tEN_DON_VI, _nDD_HO_TEN;
		#endregion


		/// <summary>
		/// Purpose: Class constructor.
		/// </summary>
		public V_DM_NGUOI_DAI_DIEN()
		{
			// Nothing for now.
		}


		/// <summary>
		/// Purpose: Insert method. This method will insert one new row into the database.
		/// </summary>
		/// <returns>True if succeeded, otherwise an Exception is thrown. </returns>
		/// <remarks>
		/// Properties needed for this method: 
		/// <UL>
		///		 <LI>ID</LI>
		///		 <LI>ID_DON_VI. May be SqlDecimal.Null</LI>
		///		 <LI>TEN_DON_VI</LI>
		///		 <LI>NDD_HO_TEN</LI>
		///		 <LI>NDD_DIEN_THOAI</LI>
		///		 <LI>NDD_EMAIL. May be SqlString.Null</LI>
		///		 <LI>NDD_CHUC_VU. May be SqlString.Null</LI>
		/// </UL>
		/// </remarks>
		public override bool Insert()
		{
			SqlCommand	cmdToExecute = new SqlCommand();
			cmdToExecute.CommandText = "dbo.[pr_V_DM_NGUOI_DAI_DIEN_Insert]";
			cmdToExecute.CommandType = CommandType.StoredProcedure;

			// Use base class' connection object
			cmdToExecute.Connection = _mainConnection;

			try
			{
				cmdToExecute.Parameters.Add(new SqlParameter("@ID", SqlDbType.Decimal, 9, ParameterDirection.Input, false, 18, 1, "", DataRowVersion.Proposed, _iD));
				cmdToExecute.Parameters.Add(new SqlParameter("@ID_DON_VI", SqlDbType.Decimal, 9, ParameterDirection.Input, false, 18, 1, "", DataRowVersion.Proposed, _iD_DON_VI));
				cmdToExecute.Parameters.Add(new SqlParameter("@TEN_DON_VI", SqlDbType.NVarChar, 250, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _tEN_DON_VI));
				cmdToExecute.Parameters.Add(new SqlParameter("@NDD_HO_TEN", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _nDD_HO_TEN));
				cmdToExecute.Parameters.Add(new SqlParameter("@NDD_DIEN_THOAI", SqlDbType.NVarChar, 15, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _nDD_DIEN_THOAI));
				cmdToExecute.Parameters.Add(new SqlParameter("@NDD_EMAIL", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _nDD_EMAIL));
				cmdToExecute.Parameters.Add(new SqlParameter("@NDD_CHUC_VU", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _nDD_CHUC_VU));

				// Open connection.
				_mainConnection.Open();

				// Execute query.
				_rowsAffected = cmdToExecute.ExecuteNonQuery();
				return true;
			}
			catch(Exception ex)
			{
				// some error occured. Bubble it to caller and encapsulate Exception object
				throw new Exception("V_DM_NGUOI_DAI_DIEN::Insert::Error occured.", ex);
			}
			finally
			{
				// Close connection.
				_mainConnection.Close();
				cmdToExecute.Dispose();
			}
		}


		#region Class Property Declarations
		public SqlDecimal ID
		{
			get
			{
				return _iD;
			}
			set
			{
				SqlDecimal iDTmp = (SqlDecimal)value;
				if(iDTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("ID", "ID can't be NULL");
				}
				_iD = value;
			}
		}


		public SqlDecimal ID_DON_VI
		{
			get
			{
				return _iD_DON_VI;
			}
			set
			{
				SqlDecimal iD_DON_VITmp = (SqlDecimal)value;
				if(iD_DON_VITmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("ID_DON_VI", "ID_DON_VI can't be NULL");
				}
				_iD_DON_VI = value;
			}
		}


		public SqlString TEN_DON_VI
		{
			get
			{
				return _tEN_DON_VI;
			}
			set
			{
				SqlString tEN_DON_VITmp = (SqlString)value;
				if(tEN_DON_VITmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("TEN_DON_VI", "TEN_DON_VI can't be NULL");
				}
				_tEN_DON_VI = value;
			}
		}


		public SqlString NDD_HO_TEN
		{
			get
			{
				return _nDD_HO_TEN;
			}
			set
			{
				SqlString nDD_HO_TENTmp = (SqlString)value;
				if(nDD_HO_TENTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("NDD_HO_TEN", "NDD_HO_TEN can't be NULL");
				}
				_nDD_HO_TEN = value;
			}
		}


		public SqlString NDD_DIEN_THOAI
		{
			get
			{
				return _nDD_DIEN_THOAI;
			}
			set
			{
				SqlString nDD_DIEN_THOAITmp = (SqlString)value;
				if(nDD_DIEN_THOAITmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("NDD_DIEN_THOAI", "NDD_DIEN_THOAI can't be NULL");
				}
				_nDD_DIEN_THOAI = value;
			}
		}


		public SqlString NDD_EMAIL
		{
			get
			{
				return _nDD_EMAIL;
			}
			set
			{
				SqlString nDD_EMAILTmp = (SqlString)value;
				if(nDD_EMAILTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("NDD_EMAIL", "NDD_EMAIL can't be NULL");
				}
				_nDD_EMAIL = value;
			}
		}


		public SqlString NDD_CHUC_VU
		{
			get
			{
				return _nDD_CHUC_VU;
			}
			set
			{
				SqlString nDD_CHUC_VUTmp = (SqlString)value;
				if(nDD_CHUC_VUTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("NDD_CHUC_VU", "NDD_CHUC_VU can't be NULL");
				}
				_nDD_CHUC_VU = value;
			}
		}
		#endregion
	}
}
