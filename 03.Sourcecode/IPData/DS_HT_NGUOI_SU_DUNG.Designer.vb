'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.17929
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DS_HT_NGUOI_SU_DUNG"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DS_HT_NGUOI_SU_DUNG
    Inherits Global.System.Data.DataSet
    
    Private tableHT_NGUOI_SU_DUNG As HT_NGUOI_SU_DUNGDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("HT_NGUOI_SU_DUNG")) Is Nothing) Then
                MyBase.Tables.Add(New HT_NGUOI_SU_DUNGDataTable(ds.Tables("HT_NGUOI_SU_DUNG")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HT_NGUOI_SU_DUNG() As HT_NGUOI_SU_DUNGDataTable
        Get
            Return Me.tableHT_NGUOI_SU_DUNG
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DS_HT_NGUOI_SU_DUNG = CType(MyBase.Clone,DS_HT_NGUOI_SU_DUNG)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("HT_NGUOI_SU_DUNG")) Is Nothing) Then
                MyBase.Tables.Add(New HT_NGUOI_SU_DUNGDataTable(ds.Tables("HT_NGUOI_SU_DUNG")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableHT_NGUOI_SU_DUNG = CType(MyBase.Tables("HT_NGUOI_SU_DUNG"),HT_NGUOI_SU_DUNGDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHT_NGUOI_SU_DUNG) Is Nothing) Then
                Me.tableHT_NGUOI_SU_DUNG.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DS_HT_NGUOI_SU_DUNG"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DS_HT_NGUOI_SU_DUNG.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableHT_NGUOI_SU_DUNG = New HT_NGUOI_SU_DUNGDataTable()
        MyBase.Tables.Add(Me.tableHT_NGUOI_SU_DUNG)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeHT_NGUOI_SU_DUNG() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DS_HT_NGUOI_SU_DUNG = New DS_HT_NGUOI_SU_DUNG()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub HT_NGUOI_SU_DUNGRowChangeEventHandler(ByVal sender As Object, ByVal e As HT_NGUOI_SU_DUNGRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HT_NGUOI_SU_DUNGDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnTEN_TRUY_CAP As Global.System.Data.DataColumn
        
        Private columnTEN As Global.System.Data.DataColumn
        
        Private columnMAT_KHAU As Global.System.Data.DataColumn
        
        Private columnNGAY_TAO As Global.System.Data.DataColumn
        
        Private columnNGUOI_TAO As Global.System.Data.DataColumn
        
        Private columnTRANG_THAI As Global.System.Data.DataColumn
        
        Private columnBUILT_IN_YN As Global.System.Data.DataColumn
        
        Private columnID_NHOM_NGUOI_DUNG As Global.System.Data.DataColumn
        
        Private columnEMAIL As Global.System.Data.DataColumn
        
        Private columnMAT_KHAU_EMAIL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HT_NGUOI_SU_DUNG"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TEN_TRUY_CAPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTEN_TRUY_CAP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAT_KHAUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAT_KHAU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NGAY_TAOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNGAY_TAO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NGUOI_TAOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNGUOI_TAO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRANG_THAIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANG_THAI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BUILT_IN_YNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUILT_IN_YN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_NHOM_NGUOI_DUNGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_NHOM_NGUOI_DUNG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAT_KHAU_EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAT_KHAU_EMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HT_NGUOI_SU_DUNGRow
            Get
                Return CType(Me.Rows(index),HT_NGUOI_SU_DUNGRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HT_NGUOI_SU_DUNGRowChanging As HT_NGUOI_SU_DUNGRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HT_NGUOI_SU_DUNGRowChanged As HT_NGUOI_SU_DUNGRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HT_NGUOI_SU_DUNGRowDeleting As HT_NGUOI_SU_DUNGRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HT_NGUOI_SU_DUNGRowDeleted As HT_NGUOI_SU_DUNGRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddHT_NGUOI_SU_DUNGRow(ByVal row As HT_NGUOI_SU_DUNGRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddHT_NGUOI_SU_DUNGRow(ByVal TEN_TRUY_CAP As String, ByVal TEN As String, ByVal MAT_KHAU As String, ByVal NGAY_TAO As Date, ByVal NGUOI_TAO As String, ByVal TRANG_THAI As String, ByVal BUILT_IN_YN As String, ByVal ID_NHOM_NGUOI_DUNG As Decimal, ByVal EMAIL As String, ByVal MAT_KHAU_EMAIL As String) As HT_NGUOI_SU_DUNGRow
            Dim rowHT_NGUOI_SU_DUNGRow As HT_NGUOI_SU_DUNGRow = CType(Me.NewRow,HT_NGUOI_SU_DUNGRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, TEN_TRUY_CAP, TEN, MAT_KHAU, NGAY_TAO, NGUOI_TAO, TRANG_THAI, BUILT_IN_YN, ID_NHOM_NGUOI_DUNG, EMAIL, MAT_KHAU_EMAIL}
            rowHT_NGUOI_SU_DUNGRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHT_NGUOI_SU_DUNGRow)
            Return rowHT_NGUOI_SU_DUNGRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByID(ByVal ID As Decimal) As HT_NGUOI_SU_DUNGRow
            Return CType(Me.Rows.Find(New Object() {ID}),HT_NGUOI_SU_DUNGRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HT_NGUOI_SU_DUNGDataTable = CType(MyBase.Clone,HT_NGUOI_SU_DUNGDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HT_NGUOI_SU_DUNGDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnTEN_TRUY_CAP = MyBase.Columns("TEN_TRUY_CAP")
            Me.columnTEN = MyBase.Columns("TEN")
            Me.columnMAT_KHAU = MyBase.Columns("MAT_KHAU")
            Me.columnNGAY_TAO = MyBase.Columns("NGAY_TAO")
            Me.columnNGUOI_TAO = MyBase.Columns("NGUOI_TAO")
            Me.columnTRANG_THAI = MyBase.Columns("TRANG_THAI")
            Me.columnBUILT_IN_YN = MyBase.Columns("BUILT_IN_YN")
            Me.columnID_NHOM_NGUOI_DUNG = MyBase.Columns("ID_NHOM_NGUOI_DUNG")
            Me.columnEMAIL = MyBase.Columns("EMAIL")
            Me.columnMAT_KHAU_EMAIL = MyBase.Columns("MAT_KHAU_EMAIL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnTEN_TRUY_CAP = New Global.System.Data.DataColumn("TEN_TRUY_CAP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTEN_TRUY_CAP)
            Me.columnTEN = New Global.System.Data.DataColumn("TEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTEN)
            Me.columnMAT_KHAU = New Global.System.Data.DataColumn("MAT_KHAU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAT_KHAU)
            Me.columnNGAY_TAO = New Global.System.Data.DataColumn("NGAY_TAO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNGAY_TAO)
            Me.columnNGUOI_TAO = New Global.System.Data.DataColumn("NGUOI_TAO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNGUOI_TAO)
            Me.columnTRANG_THAI = New Global.System.Data.DataColumn("TRANG_THAI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANG_THAI)
            Me.columnBUILT_IN_YN = New Global.System.Data.DataColumn("BUILT_IN_YN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUILT_IN_YN)
            Me.columnID_NHOM_NGUOI_DUNG = New Global.System.Data.DataColumn("ID_NHOM_NGUOI_DUNG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_NHOM_NGUOI_DUNG)
            Me.columnEMAIL = New Global.System.Data.DataColumn("EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL)
            Me.columnMAT_KHAU_EMAIL = New Global.System.Data.DataColumn("MAT_KHAU_EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAT_KHAU_EMAIL)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnTEN_TRUY_CAP.AllowDBNull = false
            Me.columnTEN_TRUY_CAP.MaxLength = 35
            Me.columnTEN.AllowDBNull = false
            Me.columnTEN.MaxLength = 250
            Me.columnMAT_KHAU.AllowDBNull = false
            Me.columnMAT_KHAU.MaxLength = 35
            Me.columnNGAY_TAO.AllowDBNull = false
            Me.columnNGUOI_TAO.AllowDBNull = false
            Me.columnNGUOI_TAO.MaxLength = 15
            Me.columnTRANG_THAI.AllowDBNull = false
            Me.columnTRANG_THAI.MaxLength = 15
            Me.columnBUILT_IN_YN.AllowDBNull = false
            Me.columnBUILT_IN_YN.MaxLength = 1
            Me.columnID_NHOM_NGUOI_DUNG.AllowDBNull = false
            Me.columnEMAIL.MaxLength = 50
            Me.columnMAT_KHAU_EMAIL.MaxLength = 250
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewHT_NGUOI_SU_DUNGRow() As HT_NGUOI_SU_DUNGRow
            Return CType(Me.NewRow,HT_NGUOI_SU_DUNGRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HT_NGUOI_SU_DUNGRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HT_NGUOI_SU_DUNGRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HT_NGUOI_SU_DUNGRowChangedEvent) Is Nothing) Then
                RaiseEvent HT_NGUOI_SU_DUNGRowChanged(Me, New HT_NGUOI_SU_DUNGRowChangeEvent(CType(e.Row,HT_NGUOI_SU_DUNGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HT_NGUOI_SU_DUNGRowChangingEvent) Is Nothing) Then
                RaiseEvent HT_NGUOI_SU_DUNGRowChanging(Me, New HT_NGUOI_SU_DUNGRowChangeEvent(CType(e.Row,HT_NGUOI_SU_DUNGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HT_NGUOI_SU_DUNGRowDeletedEvent) Is Nothing) Then
                RaiseEvent HT_NGUOI_SU_DUNGRowDeleted(Me, New HT_NGUOI_SU_DUNGRowChangeEvent(CType(e.Row,HT_NGUOI_SU_DUNGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HT_NGUOI_SU_DUNGRowDeletingEvent) Is Nothing) Then
                RaiseEvent HT_NGUOI_SU_DUNGRowDeleting(Me, New HT_NGUOI_SU_DUNGRowChangeEvent(CType(e.Row,HT_NGUOI_SU_DUNGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveHT_NGUOI_SU_DUNGRow(ByVal row As HT_NGUOI_SU_DUNGRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_HT_NGUOI_SU_DUNG = New DS_HT_NGUOI_SU_DUNG()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HT_NGUOI_SU_DUNGDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class HT_NGUOI_SU_DUNGRow
        Inherits Global.System.Data.DataRow
        
        Private tableHT_NGUOI_SU_DUNG As HT_NGUOI_SU_DUNGDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHT_NGUOI_SU_DUNG = CType(Me.Table,HT_NGUOI_SU_DUNGDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As Decimal
            Get
                Return CType(Me(Me.tableHT_NGUOI_SU_DUNG.IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableHT_NGUOI_SU_DUNG.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TEN_TRUY_CAP() As String
            Get
                Return CType(Me(Me.tableHT_NGUOI_SU_DUNG.TEN_TRUY_CAPColumn),String)
            End Get
            Set
                Me(Me.tableHT_NGUOI_SU_DUNG.TEN_TRUY_CAPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TEN() As String
            Get
                Return CType(Me(Me.tableHT_NGUOI_SU_DUNG.TENColumn),String)
            End Get
            Set
                Me(Me.tableHT_NGUOI_SU_DUNG.TENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAT_KHAU() As String
            Get
                Return CType(Me(Me.tableHT_NGUOI_SU_DUNG.MAT_KHAUColumn),String)
            End Get
            Set
                Me(Me.tableHT_NGUOI_SU_DUNG.MAT_KHAUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NGAY_TAO() As Date
            Get
                Return CType(Me(Me.tableHT_NGUOI_SU_DUNG.NGAY_TAOColumn),Date)
            End Get
            Set
                Me(Me.tableHT_NGUOI_SU_DUNG.NGAY_TAOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NGUOI_TAO() As String
            Get
                Return CType(Me(Me.tableHT_NGUOI_SU_DUNG.NGUOI_TAOColumn),String)
            End Get
            Set
                Me(Me.tableHT_NGUOI_SU_DUNG.NGUOI_TAOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRANG_THAI() As String
            Get
                Return CType(Me(Me.tableHT_NGUOI_SU_DUNG.TRANG_THAIColumn),String)
            End Get
            Set
                Me(Me.tableHT_NGUOI_SU_DUNG.TRANG_THAIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BUILT_IN_YN() As String
            Get
                Return CType(Me(Me.tableHT_NGUOI_SU_DUNG.BUILT_IN_YNColumn),String)
            End Get
            Set
                Me(Me.tableHT_NGUOI_SU_DUNG.BUILT_IN_YNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_NHOM_NGUOI_DUNG() As Decimal
            Get
                Return CType(Me(Me.tableHT_NGUOI_SU_DUNG.ID_NHOM_NGUOI_DUNGColumn),Decimal)
            End Get
            Set
                Me(Me.tableHT_NGUOI_SU_DUNG.ID_NHOM_NGUOI_DUNGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableHT_NGUOI_SU_DUNG.EMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMAIL' in table 'HT_NGUOI_SU_DUNG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHT_NGUOI_SU_DUNG.EMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAT_KHAU_EMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableHT_NGUOI_SU_DUNG.MAT_KHAU_EMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAT_KHAU_EMAIL' in table 'HT_NGUOI_SU_DUNG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHT_NGUOI_SU_DUNG.MAT_KHAU_EMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEMAILNull() As Boolean
            Return Me.IsNull(Me.tableHT_NGUOI_SU_DUNG.EMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEMAILNull()
            Me(Me.tableHT_NGUOI_SU_DUNG.EMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAT_KHAU_EMAILNull() As Boolean
            Return Me.IsNull(Me.tableHT_NGUOI_SU_DUNG.MAT_KHAU_EMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAT_KHAU_EMAILNull()
            Me(Me.tableHT_NGUOI_SU_DUNG.MAT_KHAU_EMAILColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class HT_NGUOI_SU_DUNGRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As HT_NGUOI_SU_DUNGRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As HT_NGUOI_SU_DUNGRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As HT_NGUOI_SU_DUNGRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DS_HT_NGUOI_SU_DUNGTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class HT_NGUOI_SU_DUNGTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "HT_NGUOI_SU_DUNG"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("TEN_TRUY_CAP", "TEN_TRUY_CAP")
            tableMapping.ColumnMappings.Add("TEN", "TEN")
            tableMapping.ColumnMappings.Add("MAT_KHAU", "MAT_KHAU")
            tableMapping.ColumnMappings.Add("NGAY_TAO", "NGAY_TAO")
            tableMapping.ColumnMappings.Add("NGUOI_TAO", "NGUOI_TAO")
            tableMapping.ColumnMappings.Add("TRANG_THAI", "TRANG_THAI")
            tableMapping.ColumnMappings.Add("BUILT_IN_YN", "BUILT_IN_YN")
            tableMapping.ColumnMappings.Add("ID_NHOM_NGUOI_DUNG", "ID_NHOM_NGUOI_DUNG")
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL")
            tableMapping.ColumnMappings.Add("MAT_KHAU_EMAIL", "MAT_KHAU_EMAIL")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[HT_NGUOI_SU_DUNG] WHERE (([ID] = @Original_ID) AND ([TEN_TRUY_"& _ 
                "CAP] = @Original_TEN_TRUY_CAP) AND ([TEN] = @Original_TEN) AND ([MAT_KHAU] = @Or"& _ 
                "iginal_MAT_KHAU) AND ([NGAY_TAO] = @Original_NGAY_TAO) AND ([NGUOI_TAO] = @Origi"& _ 
                "nal_NGUOI_TAO) AND ([TRANG_THAI] = @Original_TRANG_THAI) AND ([BUILT_IN_YN] = @O"& _ 
                "riginal_BUILT_IN_YN) AND ([ID_NHOM_NGUOI_DUNG] = @Original_ID_NHOM_NGUOI_DUNG) A"& _ 
                "ND ((@IsNull_EMAIL = 1 AND [EMAIL] IS NULL) OR ([EMAIL] = @Original_EMAIL)) AND "& _ 
                "((@IsNull_MAT_KHAU_EMAIL = 1 AND [MAT_KHAU_EMAIL] IS NULL) OR ([MAT_KHAU_EMAIL] "& _ 
                "= @Original_MAT_KHAU_EMAIL)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TEN_TRUY_CAP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TEN_TRUY_CAP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TEN", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TEN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MAT_KHAU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAT_KHAU", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NGAY_TAO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NGAY_TAO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NGUOI_TAO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NGUOI_TAO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TRANG_THAI", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRANG_THAI", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BUILT_IN_YN", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUILT_IN_YN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_NHOM_NGUOI_DUNG", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ID_NHOM_NGUOI_DUNG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EMAIL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMAIL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMAIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMAIL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MAT_KHAU_EMAIL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAT_KHAU_EMAIL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MAT_KHAU_EMAIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAT_KHAU_EMAIL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[HT_NGUOI_SU_DUNG] ([TEN_TRUY_CAP], [TEN], [MAT_KHAU], [NGAY_TA"& _ 
                "O], [NGUOI_TAO], [TRANG_THAI], [BUILT_IN_YN], [ID_NHOM_NGUOI_DUNG], [EMAIL], [MA"& _ 
                "T_KHAU_EMAIL]) VALUES (@TEN_TRUY_CAP, @TEN, @MAT_KHAU, @NGAY_TAO, @NGUOI_TAO, @T"& _ 
                "RANG_THAI, @BUILT_IN_YN, @ID_NHOM_NGUOI_DUNG, @EMAIL, @MAT_KHAU_EMAIL);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT "& _ 
                "ID, TEN_TRUY_CAP, TEN, MAT_KHAU, NGAY_TAO, NGUOI_TAO, TRANG_THAI, BUILT_IN_YN, I"& _ 
                "D_NHOM_NGUOI_DUNG, EMAIL, MAT_KHAU_EMAIL FROM HT_NGUOI_SU_DUNG WHERE (ID = SCOPE"& _ 
                "_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TEN_TRUY_CAP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TEN_TRUY_CAP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TEN", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MAT_KHAU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAT_KHAU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NGAY_TAO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NGAY_TAO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NGUOI_TAO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NGUOI_TAO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRANG_THAI", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRANG_THAI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUILT_IN_YN", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUILT_IN_YN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_NHOM_NGUOI_DUNG", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ID_NHOM_NGUOI_DUNG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMAIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MAT_KHAU_EMAIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAT_KHAU_EMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[HT_NGUOI_SU_DUNG] SET [TEN_TRUY_CAP] = @TEN_TRUY_CAP, [TEN] = @TEN,"& _ 
                " [MAT_KHAU] = @MAT_KHAU, [NGAY_TAO] = @NGAY_TAO, [NGUOI_TAO] = @NGUOI_TAO, [TRAN"& _ 
                "G_THAI] = @TRANG_THAI, [BUILT_IN_YN] = @BUILT_IN_YN, [ID_NHOM_NGUOI_DUNG] = @ID_"& _ 
                "NHOM_NGUOI_DUNG, [EMAIL] = @EMAIL, [MAT_KHAU_EMAIL] = @MAT_KHAU_EMAIL WHERE (([I"& _ 
                "D] = @Original_ID) AND ([TEN_TRUY_CAP] = @Original_TEN_TRUY_CAP) AND ([TEN] = @O"& _ 
                "riginal_TEN) AND ([MAT_KHAU] = @Original_MAT_KHAU) AND ([NGAY_TAO] = @Original_N"& _ 
                "GAY_TAO) AND ([NGUOI_TAO] = @Original_NGUOI_TAO) AND ([TRANG_THAI] = @Original_T"& _ 
                "RANG_THAI) AND ([BUILT_IN_YN] = @Original_BUILT_IN_YN) AND ([ID_NHOM_NGUOI_DUNG]"& _ 
                " = @Original_ID_NHOM_NGUOI_DUNG) AND ((@IsNull_EMAIL = 1 AND [EMAIL] IS NULL) OR"& _ 
                " ([EMAIL] = @Original_EMAIL)) AND ((@IsNull_MAT_KHAU_EMAIL = 1 AND [MAT_KHAU_EMA"& _ 
                "IL] IS NULL) OR ([MAT_KHAU_EMAIL] = @Original_MAT_KHAU_EMAIL)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID, TEN"& _ 
                "_TRUY_CAP, TEN, MAT_KHAU, NGAY_TAO, NGUOI_TAO, TRANG_THAI, BUILT_IN_YN, ID_NHOM_"& _ 
                "NGUOI_DUNG, EMAIL, MAT_KHAU_EMAIL FROM HT_NGUOI_SU_DUNG WHERE (ID = @ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TEN_TRUY_CAP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TEN_TRUY_CAP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TEN", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MAT_KHAU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAT_KHAU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NGAY_TAO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NGAY_TAO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NGUOI_TAO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NGUOI_TAO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRANG_THAI", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRANG_THAI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUILT_IN_YN", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUILT_IN_YN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_NHOM_NGUOI_DUNG", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ID_NHOM_NGUOI_DUNG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMAIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MAT_KHAU_EMAIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAT_KHAU_EMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TEN_TRUY_CAP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TEN_TRUY_CAP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TEN", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TEN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MAT_KHAU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAT_KHAU", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NGAY_TAO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NGAY_TAO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NGUOI_TAO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NGUOI_TAO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TRANG_THAI", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRANG_THAI", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BUILT_IN_YN", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUILT_IN_YN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID_NHOM_NGUOI_DUNG", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ID_NHOM_NGUOI_DUNG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EMAIL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMAIL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMAIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMAIL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MAT_KHAU_EMAIL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAT_KHAU_EMAIL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MAT_KHAU_EMAIL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAT_KHAU_EMAIL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.IP.Core.IPData.My.MySettings.Default.TOS_TicketSystemConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID, TEN_TRUY_CAP, TEN, MAT_KHAU, NGAY_TAO, NGUOI_TAO, TRANG_THAI, BUILT_IN"& _ 
                "_YN, ID_NHOM_NGUOI_DUNG, EMAIL, MAT_KHAU_EMAIL FROM dbo.HT_NGUOI_SU_DUNG"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_HT_NGUOI_SU_DUNG.HT_NGUOI_SU_DUNGDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_HT_NGUOI_SU_DUNG.HT_NGUOI_SU_DUNGDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_HT_NGUOI_SU_DUNG.HT_NGUOI_SU_DUNGDataTable = New DS_HT_NGUOI_SU_DUNG.HT_NGUOI_SU_DUNGDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_HT_NGUOI_SU_DUNG.HT_NGUOI_SU_DUNGDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_HT_NGUOI_SU_DUNG) As Integer
            Return Me.Adapter.Update(dataSet, "HT_NGUOI_SU_DUNG")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID As Decimal, ByVal Original_TEN_TRUY_CAP As String, ByVal Original_TEN As String, ByVal Original_MAT_KHAU As String, ByVal Original_NGAY_TAO As Date, ByVal Original_NGUOI_TAO As String, ByVal Original_TRANG_THAI As String, ByVal Original_BUILT_IN_YN As String, ByVal Original_ID_NHOM_NGUOI_DUNG As Decimal, ByVal Original_EMAIL As String, ByVal Original_MAT_KHAU_EMAIL As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Decimal)
            If (Original_TEN_TRUY_CAP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TEN_TRUY_CAP")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_TEN_TRUY_CAP,String)
            End If
            If (Original_TEN Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TEN")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_TEN,String)
            End If
            If (Original_MAT_KHAU Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_MAT_KHAU")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_MAT_KHAU,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_NGAY_TAO,Date)
            If (Original_NGUOI_TAO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NGUOI_TAO")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_NGUOI_TAO,String)
            End If
            If (Original_TRANG_THAI Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TRANG_THAI")
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_TRANG_THAI,String)
            End If
            If (Original_BUILT_IN_YN Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_BUILT_IN_YN")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_BUILT_IN_YN,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_ID_NHOM_NGUOI_DUNG,Decimal)
            If (Original_EMAIL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_EMAIL,String)
            End If
            If (Original_MAT_KHAU_EMAIL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_MAT_KHAU_EMAIL,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal TEN_TRUY_CAP As String, ByVal TEN As String, ByVal MAT_KHAU As String, ByVal NGAY_TAO As Date, ByVal NGUOI_TAO As String, ByVal TRANG_THAI As String, ByVal BUILT_IN_YN As String, ByVal ID_NHOM_NGUOI_DUNG As Decimal, ByVal EMAIL As String, ByVal MAT_KHAU_EMAIL As String) As Integer
            If (TEN_TRUY_CAP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TEN_TRUY_CAP")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(TEN_TRUY_CAP,String)
            End If
            If (TEN Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TEN")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(TEN,String)
            End If
            If (MAT_KHAU Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MAT_KHAU")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(MAT_KHAU,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(NGAY_TAO,Date)
            If (NGUOI_TAO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NGUOI_TAO")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(NGUOI_TAO,String)
            End If
            If (TRANG_THAI Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TRANG_THAI")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(TRANG_THAI,String)
            End If
            If (BUILT_IN_YN Is Nothing) Then
                Throw New Global.System.ArgumentNullException("BUILT_IN_YN")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(BUILT_IN_YN,String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(ID_NHOM_NGUOI_DUNG,Decimal)
            If (EMAIL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(EMAIL,String)
            End If
            If (MAT_KHAU_EMAIL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(MAT_KHAU_EMAIL,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal TEN_TRUY_CAP As String,  _
                    ByVal TEN As String,  _
                    ByVal MAT_KHAU As String,  _
                    ByVal NGAY_TAO As Date,  _
                    ByVal NGUOI_TAO As String,  _
                    ByVal TRANG_THAI As String,  _
                    ByVal BUILT_IN_YN As String,  _
                    ByVal ID_NHOM_NGUOI_DUNG As Decimal,  _
                    ByVal EMAIL As String,  _
                    ByVal MAT_KHAU_EMAIL As String,  _
                    ByVal Original_ID As Decimal,  _
                    ByVal Original_TEN_TRUY_CAP As String,  _
                    ByVal Original_TEN As String,  _
                    ByVal Original_MAT_KHAU As String,  _
                    ByVal Original_NGAY_TAO As Date,  _
                    ByVal Original_NGUOI_TAO As String,  _
                    ByVal Original_TRANG_THAI As String,  _
                    ByVal Original_BUILT_IN_YN As String,  _
                    ByVal Original_ID_NHOM_NGUOI_DUNG As Decimal,  _
                    ByVal Original_EMAIL As String,  _
                    ByVal Original_MAT_KHAU_EMAIL As String,  _
                    ByVal ID As Decimal) As Integer
            If (TEN_TRUY_CAP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TEN_TRUY_CAP")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(TEN_TRUY_CAP,String)
            End If
            If (TEN Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TEN")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(TEN,String)
            End If
            If (MAT_KHAU Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MAT_KHAU")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(MAT_KHAU,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(NGAY_TAO,Date)
            If (NGUOI_TAO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NGUOI_TAO")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(NGUOI_TAO,String)
            End If
            If (TRANG_THAI Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TRANG_THAI")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(TRANG_THAI,String)
            End If
            If (BUILT_IN_YN Is Nothing) Then
                Throw New Global.System.ArgumentNullException("BUILT_IN_YN")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(BUILT_IN_YN,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(ID_NHOM_NGUOI_DUNG,Decimal)
            If (EMAIL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(EMAIL,String)
            End If
            If (MAT_KHAU_EMAIL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(MAT_KHAU_EMAIL,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_ID,Decimal)
            If (Original_TEN_TRUY_CAP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TEN_TRUY_CAP")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_TEN_TRUY_CAP,String)
            End If
            If (Original_TEN Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TEN")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_TEN,String)
            End If
            If (Original_MAT_KHAU Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_MAT_KHAU")
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_MAT_KHAU,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_NGAY_TAO,Date)
            If (Original_NGUOI_TAO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NGUOI_TAO")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_NGUOI_TAO,String)
            End If
            If (Original_TRANG_THAI Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TRANG_THAI")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_TRANG_THAI,String)
            End If
            If (Original_BUILT_IN_YN Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_BUILT_IN_YN")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_BUILT_IN_YN,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_ID_NHOM_NGUOI_DUNG,Decimal)
            If (Original_EMAIL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_EMAIL,String)
            End If
            If (Original_MAT_KHAU_EMAIL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_MAT_KHAU_EMAIL,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal TEN_TRUY_CAP As String,  _
                    ByVal TEN As String,  _
                    ByVal MAT_KHAU As String,  _
                    ByVal NGAY_TAO As Date,  _
                    ByVal NGUOI_TAO As String,  _
                    ByVal TRANG_THAI As String,  _
                    ByVal BUILT_IN_YN As String,  _
                    ByVal ID_NHOM_NGUOI_DUNG As Decimal,  _
                    ByVal EMAIL As String,  _
                    ByVal MAT_KHAU_EMAIL As String,  _
                    ByVal Original_ID As Decimal,  _
                    ByVal Original_TEN_TRUY_CAP As String,  _
                    ByVal Original_TEN As String,  _
                    ByVal Original_MAT_KHAU As String,  _
                    ByVal Original_NGAY_TAO As Date,  _
                    ByVal Original_NGUOI_TAO As String,  _
                    ByVal Original_TRANG_THAI As String,  _
                    ByVal Original_BUILT_IN_YN As String,  _
                    ByVal Original_ID_NHOM_NGUOI_DUNG As Decimal,  _
                    ByVal Original_EMAIL As String,  _
                    ByVal Original_MAT_KHAU_EMAIL As String) As Integer
            Return Me.Update(TEN_TRUY_CAP, TEN, MAT_KHAU, NGAY_TAO, NGUOI_TAO, TRANG_THAI, BUILT_IN_YN, ID_NHOM_NGUOI_DUNG, EMAIL, MAT_KHAU_EMAIL, Original_ID, Original_TEN_TRUY_CAP, Original_TEN, Original_MAT_KHAU, Original_NGAY_TAO, Original_NGUOI_TAO, Original_TRANG_THAI, Original_BUILT_IN_YN, Original_ID_NHOM_NGUOI_DUNG, Original_EMAIL, Original_MAT_KHAU_EMAIL, Original_ID)
        End Function
    End Class
End Namespace
