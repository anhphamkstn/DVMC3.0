///************************************************
/// Generated by: vannd
/// Date: 08/09/2015 05:00:32
/// Goal: Create User Service Class for DM_BLACK_LIST
///************************************************
/// <summary>
/// Create User Service Class for DM_BLACK_LIST
/// </summary>

using System;
using IPCOREDS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;

namespace IPCOREUS
{

	public class US_DM_BLACK_LIST : US_Object
	{
		private const string c_TableName = "DM_BLACK_LIST";
		#region Public Properties
		public decimal dcID 
		{
			get
			{
				return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
			}
			set	
			{
				pm_objDR["ID"] = value;
			}
		}

		public bool IsIDNull()	{
			return pm_objDR.IsNull("ID");
		}

		public void SetIDNull() {
			pm_objDR["ID"] = System.Convert.DBNull;
		}

		public string strSO_DIEN_THOAI 
		{
			get 
			{
				return CNull.RowNVLString(pm_objDR, "SO_DIEN_THOAI", IPConstants.c_DefaultString);
			}
			set 
			{
				pm_objDR["SO_DIEN_THOAI"] = value;
			}
		}

		public bool IsSO_DIEN_THOAINull() 
		{
			return pm_objDR.IsNull("SO_DIEN_THOAI");
		}

		public void SetSO_DIEN_THOAINull() {
			pm_objDR["SO_DIEN_THOAI"] = System.Convert.DBNull;
		}

		public decimal dcID_NGUOI_ADD 
		{
			get
			{
				return CNull.RowNVLDecimal(pm_objDR, "ID_NGUOI_ADD", IPConstants.c_DefaultDecimal);
			}
			set	
			{
				pm_objDR["ID_NGUOI_ADD"] = value;
			}
		}

		public bool IsID_NGUOI_ADDNull()	{
			return pm_objDR.IsNull("ID_NGUOI_ADD");
		}

		public void SetID_NGUOI_ADDNull() {
			pm_objDR["ID_NGUOI_ADD"] = System.Convert.DBNull;
		}

		public decimal dcID_NGUOI_REMOVE 
		{
			get
			{
				return CNull.RowNVLDecimal(pm_objDR, "ID_NGUOI_REMOVE", IPConstants.c_DefaultDecimal);
			}
			set	
			{
				pm_objDR["ID_NGUOI_REMOVE"] = value;
			}
		}

		public bool IsID_NGUOI_REMOVENull()	{
			return pm_objDR.IsNull("ID_NGUOI_REMOVE");
		}

		public void SetID_NGUOI_REMOVENull() {
			pm_objDR["ID_NGUOI_REMOVE"] = System.Convert.DBNull;
		}

		public DateTime datNGAY_ADD
		{
			get   
			{
				return CNull.RowNVLDate(pm_objDR, "NGAY_ADD", IPConstants.c_DefaultDate);
			}
			set   
			{
				pm_objDR["NGAY_ADD"] = value;
			}
		}

		public bool IsNGAY_ADDNull()
		{
			return pm_objDR.IsNull("NGAY_ADD");
		}

		public void SetNGAY_ADDNull()
		{
			pm_objDR["NGAY_ADD"] = System.Convert.DBNull;
		}

		public DateTime datNGAY_REMOVE
		{
			get   
			{
				return CNull.RowNVLDate(pm_objDR, "NGAY_REMOVE", IPConstants.c_DefaultDate);
			}
			set   
			{
				pm_objDR["NGAY_REMOVE"] = value;
			}
		}

		public bool IsNGAY_REMOVENull()
		{
			return pm_objDR.IsNull("NGAY_REMOVE");
		}

		public void SetNGAY_REMOVENull()
		{
			pm_objDR["NGAY_REMOVE"] = System.Convert.DBNull;
		}

		public string strADD_YN 
		{
			get 
			{
				return CNull.RowNVLString(pm_objDR, "ADD_YN", IPConstants.c_DefaultString);
			}
			set 
			{
				pm_objDR["ADD_YN"] = value;
			}
		}

		public bool IsADD_YNNull() 
		{
			return pm_objDR.IsNull("ADD_YN");
		}

		public void SetADD_YNNull() {
			pm_objDR["ADD_YN"] = System.Convert.DBNull;
		}

		public string strHO_TEN_CHU_DIEN_THOAI 
		{
			get 
			{
				return CNull.RowNVLString(pm_objDR, "HO_TEN_CHU_DIEN_THOAI", IPConstants.c_DefaultString);
			}
			set 
			{
				pm_objDR["HO_TEN_CHU_DIEN_THOAI"] = value;
			}
		}

		public bool IsHO_TEN_CHU_DIEN_THOAINull() 
		{
			return pm_objDR.IsNull("HO_TEN_CHU_DIEN_THOAI");
		}

		public void SetHO_TEN_CHU_DIEN_THOAINull() {
			pm_objDR["HO_TEN_CHU_DIEN_THOAI"] = System.Convert.DBNull;
		}

		public string strGHI_CHU_LY_DO 
		{
			get 
			{
				return CNull.RowNVLString(pm_objDR, "GHI_CHU_LY_DO", IPConstants.c_DefaultString);
			}
			set 
			{
				pm_objDR["GHI_CHU_LY_DO"] = value;
			}
		}

		public bool IsGHI_CHU_LY_DONull() 
		{
			return pm_objDR.IsNull("GHI_CHU_LY_DO");
		}

		public void SetGHI_CHU_LY_DONull() {
			pm_objDR["GHI_CHU_LY_DO"] = System.Convert.DBNull;
		}

		#endregion


		#region Init Functions
		public US_DM_BLACK_LIST() 
		{
			pm_objDS = new DS_DM_BLACK_LIST();
			pm_strTableName = c_TableName;
			pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
		}

		public US_DM_BLACK_LIST(DataRow i_objDR): this()
		{
			this.DataRow2Me(i_objDR);
		}

		public US_DM_BLACK_LIST(decimal i_dbID) 
		{
			pm_objDS = new DS_DM_BLACK_LIST();
			pm_strTableName = c_TableName;
			IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
			v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
			SqlCommand v_cmdSQL;
			v_cmdSQL = v_objMkCmd.getSelectCmd();
			this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
			pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
		}
		#endregion


	}
}
