///************************************************
/// Generated by: tuandm
/// Date: 08/09/2015 08:52:21
/// Goal: Create User Service Class for DM_CAU_HOI
///************************************************
/// <summary>
/// Create User Service Class for DM_CAU_HOI
/// </summary>

using System;
using IPCOREDS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;


namespace IPCOREUS
{

	public class US_DM_CAU_HOI : US_Object
	{
		private const string c_TableName = "DM_CAU_HOI";
		#region Public Properties
		public decimal dcID 
		{
			get
			{
				return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
			}
			set	
			{
				pm_objDR["ID"] = value;
			}
		}

		public bool IsIDNull()	{
			return pm_objDR.IsNull("ID");
		}

		public void SetIDNull() {
			pm_objDR["ID"] = System.Convert.DBNull;
		}

		public decimal dcID_TO_CHUC 
		{
			get
			{
				return CNull.RowNVLDecimal(pm_objDR, "ID_TO_CHUC", IPConstants.c_DefaultDecimal);
			}
			set	
			{
				pm_objDR["ID_TO_CHUC"] = value;
			}
		}

		public bool IsID_TO_CHUCNull()	{
			return pm_objDR.IsNull("ID_TO_CHUC");
		}

		public void SetID_TO_CHUCNull() {
			pm_objDR["ID_TO_CHUC"] = System.Convert.DBNull;
		}

		public decimal dcID_NHOM_CAU_HOI 
		{
			get
			{
				return CNull.RowNVLDecimal(pm_objDR, "ID_NHOM_CAU_HOI", IPConstants.c_DefaultDecimal);
			}
			set	
			{
				pm_objDR["ID_NHOM_CAU_HOI"] = value;
			}
		}

		public bool IsID_NHOM_CAU_HOINull()	{
			return pm_objDR.IsNull("ID_NHOM_CAU_HOI");
		}

		public void SetID_NHOM_CAU_HOINull() {
			pm_objDR["ID_NHOM_CAU_HOI"] = System.Convert.DBNull;
		}

		public string strNOI_DUNG_CAU_HOI 
		{
			get 
			{
				return CNull.RowNVLString(pm_objDR, "NOI_DUNG_CAU_HOI", IPConstants.c_DefaultString);
			}
			set 
			{
				pm_objDR["NOI_DUNG_CAU_HOI"] = value;
			}
		}

		public bool IsNOI_DUNG_CAU_HOINull() 
		{
			return pm_objDR.IsNull("NOI_DUNG_CAU_HOI");
		}

		public void SetNOI_DUNG_CAU_HOINull() {
			pm_objDR["NOI_DUNG_CAU_HOI"] = System.Convert.DBNull;
		}

		public DateTime datNGAY_TAO
		{
			get   
			{
				return CNull.RowNVLDate(pm_objDR, "NGAY_TAO", IPConstants.c_DefaultDate);
			}
			set   
			{
				pm_objDR["NGAY_TAO"] = value;
			}
		}

		public bool IsNGAY_TAONull()
		{
			return pm_objDR.IsNull("NGAY_TAO");
		}

		public void SetNGAY_TAONull()
		{
			pm_objDR["NGAY_TAO"] = System.Convert.DBNull;
		}

		public decimal dcNGUOI_TAO 
		{
			get
			{
				return CNull.RowNVLDecimal(pm_objDR, "NGUOI_TAO", IPConstants.c_DefaultDecimal);
			}
			set	
			{
				pm_objDR["NGUOI_TAO"] = value;
			}
		}

		public bool IsNGUOI_TAONull()	{
			return pm_objDR.IsNull("NGUOI_TAO");
		}

		public void SetNGUOI_TAONull() {
			pm_objDR["NGUOI_TAO"] = System.Convert.DBNull;
		}

		public DateTime datNGAY_CAP_NHAP_CUOI
		{
			get   
			{
				return CNull.RowNVLDate(pm_objDR, "NGAY_CAP_NHAP_CUOI", IPConstants.c_DefaultDate);
			}
			set   
			{
				pm_objDR["NGAY_CAP_NHAP_CUOI"] = value;
			}
		}

		public bool IsNGAY_CAP_NHAP_CUOINull()
		{
			return pm_objDR.IsNull("NGAY_CAP_NHAP_CUOI");
		}

		public void SetNGAY_CAP_NHAP_CUOINull()
		{
			pm_objDR["NGAY_CAP_NHAP_CUOI"] = System.Convert.DBNull;
		}

		public decimal dcNGUOI_CAP_NHAT_CUOI 
		{
			get
			{
				return CNull.RowNVLDecimal(pm_objDR, "NGUOI_CAP_NHAT_CUOI", IPConstants.c_DefaultDecimal);
			}
			set	
			{
				pm_objDR["NGUOI_CAP_NHAT_CUOI"] = value;
			}
		}

		public bool IsNGUOI_CAP_NHAT_CUOINull()	{
			return pm_objDR.IsNull("NGUOI_CAP_NHAT_CUOI");
		}

		public void SetNGUOI_CAP_NHAT_CUOINull() {
			pm_objDR["NGUOI_CAP_NHAT_CUOI"] = System.Convert.DBNull;
		}

		#endregion


		#region Init Functions
		public US_DM_CAU_HOI() 
		{
			pm_objDS = new DS_DM_CAU_HOI();
			pm_strTableName = c_TableName;
			pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
		}

		public US_DM_CAU_HOI(DataRow i_objDR): this()
		{
			this.DataRow2Me(i_objDR);
		}

		public US_DM_CAU_HOI(decimal i_dbID) 
		{
			pm_objDS = new DS_DM_CAU_HOI();
			pm_strTableName = c_TableName;
			IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
			v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
			SqlCommand v_cmdSQL;
			v_cmdSQL = v_objMkCmd.getSelectCmd();
			this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
			pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
		}
		#endregion


	}
}
